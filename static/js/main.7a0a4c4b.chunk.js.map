{"version":3,"sources":["consts/index.js","helpers/index.js","components/header/index.js","components/today/index.js","components/day/index.js","components/year/index.js","components/months/index.js","components/graph/index.js","layouts/index.js","index.js"],"names":["date","Date","currentMonthName","getMonth","toLocaleString","month","currentDayName","weekday","currentDayNumber","day","currentYearNumber","year","tributePageColor","surveyFormColor","productLandingPageColor","techDocPageColor","personalPortfolioColor","dataChartjs","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","minBarLength","initialStateToday","comments","start1","start2","start3","start4","end1","end2","end3","end4","project1","project2","project3","project4","totalHrs","initialStateYearTotalTime","initialStateYear","rwdc2021","today","getTotalMinutes","startIn","endIn","startm","totalm","start","split","end","getMonthNumberFromName","monthName","number","getMonthData","days","monthNumber","daysInMonth","getDate","offsetDays","getDay","getOffsetMonth","arrMonth","Array","fill","i","length","dayNumber","createMonth","links","map","createLink","uuidv4","arrWeeksLinks","push","week","className","activeClassName","exact","to","Header","Navbar","bg","variant","expand","Brand","href","process","Toggle","aria-controls","Collapse","id","Nav","replace","MyTr","props","handleChange","startName","startVal","data","endName","endVal","projectName","projectVal","Row","Col","Form","Control","type","disabled","onChange","name","value","placeholder","as","MyTable","Table","bordered","hover","responsive","Today","hours","undefined","minutes","InputGroup","FormControl","Day","dayId","useLocation","pathname","striped","style","border","Year","arr","ThisMonth","Month","Graph","dataYear","arrT","totalTime","arrTr","arrSur","arrPro","arrTech","arrPer","j","getDataGraph","options","scales","yAxes","stacked","ticks","beginAtZero","xAxes","App","currentMonthNumber","useState","JSON","parse","localStorage","getItem","some","parseInt","console","log","getInitialData","setData","useEffect","setItem","stringify","evt","target","currentMonthDays","todayTotal","totalMinutes","filter","n","isNaN","reduce","acc","curr","Math","floor","getTotalHrsMinutes","dayTotalTime","total1","total2","total3","total4","total1Hrs","total2Hrs","total3Hrs","total4Hrs","total1Min","total2Min","total3Min","total4Min","totalProject1","totalProject2","totalProject3","totalProject4","temp","totalToday","Object","entries","key","assign","getDayTotalTime","monthTotalTime","dayTotal","total","prevTemp","prev","pastDay","getMonthTotalTime","tempArr","currentDayIndex","indexOf","Container","path","defaults","global","animation","maintainAspectRatio","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a0a4c4b.chunk.js","sourcesContent":["\nconst date                 = new Date();\n\nconst currentMonthNumber   =  date.getMonth();\nconst currentMonthName     = `${date.toLocaleString('default', {month: 'long'})}`;\n\nconst currentDayName       = `${date.toLocaleString('default', {weekday: 'long'})}`;\nconst currentDayNumber     = `${date.toLocaleString('default', {day: 'numeric'})}`;\n\nconst currentYearNumber    = `${date.toLocaleString('default', {year: 'numeric'})}`;\n\nconst tributePageColor         = 'rgba(0,   120, 200, 1)';\nconst tributePageColor1        = 'rgba(0,   120, 200, 0.5)';\n\nconst surveyFormColor          = 'rgba(0,   200,   0, 1)';\nconst surveyFormColor1         = 'rgba(0,   200,   0, 0.5)';\n\nconst productLandingPageColor  = 'rgba(170,   0, 200, 1)';\nconst productLandingPageColor1 = 'rgba(170,   0, 200, 0.5)';\n\nconst techDocPageColor         = 'rgba(255, 190,   0, 1)';\nconst techDocPageColor1        = 'rgba(255, 190,   0, 0.5)';\n\nconst personalPortfolioColor   = 'rgba(255, 100,   0, 1)';\nconst personalPortfolioColor1  = 'rgba(255, 100,   0, 0.5)';\n\n\n\nconst dataChartjs = {\n    labels: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n  datasets: [\n    {\n        label:                 'Tribute Page',\n        backgroundColor:        tributePageColor, \n        borderColor:            tributePageColor, \n        borderWidth:            1,\n        hoverBackgroundColor:   tributePageColor1,  \n        hoverBorderColor:       tributePageColor, \n        minBarLength:           1,\n    },\n    {\n        label:                 'Survey Form',\n        backgroundColor:       surveyFormColor,\n        borderColor:           surveyFormColor,\n        borderWidth:           1,\n        hoverBackgroundColor:   surveyFormColor1,\n        hoverBorderColor:       surveyFormColor,\n        minBarLength:          1,\n    },\n    {\n        label:                 'Product Landing Page',\n        backgroundColor:        productLandingPageColor, \n        borderColor:            productLandingPageColor, \n        borderWidth:           1,\n        hoverBackgroundColor:   productLandingPageColor1, \n        hoverBorderColor:       productLandingPageColor, \n        minBarLength:          1,\n    },\n    {\n        label:                 'Technical Documentation Page',\n        backgroundColor:        techDocPageColor, \n        borderColor:            techDocPageColor, \n        borderWidth:           1,\n        hoverBackgroundColor:  techDocPageColor1, \n        hoverBorderColor:      techDocPageColor, \n        minBarLength:          1,\n    },\n     {\n        label:                 'Personal Portfolio Webpage',\n        backgroundColor:       personalPortfolioColor, \n        borderColor:           personalPortfolioColor,   \n        borderWidth:           1,\n        hoverBackgroundColor:  personalPortfolioColor1, \n        hoverBorderColor:      personalPortfolioColor, \n        minBarLength:          1,\n    }\n  ]\n};\n\n\nconst initialStateToday    = {\n      currentDayName:   currentDayName,\n      currentMonthName: currentMonthName,\n      currentDayNumber: currentDayNumber,\n      comments:         '',\n      start1:           '',\n      start2:           '',\n      start3:           '',\n      start4:           '',\n      end1:             '',\n      end2:             '',\n      end3:             '',\n      end4:             '',\n      project1:         '',\n      project2:         '',\n      project3:         '',\n      project4:         '',\n      totalHrs:          0\n};\n\nconst initialStateYearTotalTime = {\n   \"Tribute Page\":  {\n     \"hours\":                    0, \n     \"minutes\":                  0, \n   },\n\n   \"Survey Form\": {\n     \"hours\":                    0, \n     \"minutes\":                  0, \n   },\n\n   \"Product Landing Page\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n    },\n\n   \"Technical Documentation Page\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n    },\n\n   \"Personal Portfolio Webpage\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n   },      \n\n};\n\n\n\n/*\nyear\n  {\n  monthName: string \n  days: [\n  { \n    dayNumber: number \n    totalTime: {\n      \"Tribute Page\":  {\n        \"hours\":                    0, \n        \"minutes\":                  0, \n      },\n\n      \"Survey Form\": {\n        \"hours\":                    0, \n        \"minutes\":                  0, \n      },\n\n      \"Product Landing Page\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n       },\n\n      \"Technical Documentation Page\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n       },\n      {\n      \"Personal Portfolio Webpage\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n      } \n   }\n ]  \n*/    \nconst initialStateYear = [\n    {\n      \"monthName\": \"January\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"February\",\n        \"days\": [],\n      \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"March\",\n      \"days\": [],\n      \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"April\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"May\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"June\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"July\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"August\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"September\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"October\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"November\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    },\n    {\n      \"monthName\": \"December\",\n      \"days\": [],\n        \"totalTime\": initialStateYearTotalTime \n    }\n];\n\n\nconst rwdc2021 = {\n        day: {\n            [currentMonthName]: {\n                [currentDayNumber]: {\n                    ...initialStateToday\n                }\n            }\n        },\n        today: {\n                    ...initialStateToday\n        },\n        year:          initialStateYear\n    };\n\n\nexport {\n    currentMonthNumber,\n    currentMonthName,\n    currentDayName,\n    currentDayNumber,\n    currentYearNumber,\n    dataChartjs,\n    initialStateToday,\n    initialStateYearTotalTime,\n    rwdc2021\n}\n\n/* year:  \n * \"days\": [\n *  {\n *    \"dayNumber\": 0,\n *    \"totalTime\": [\n *      { name: \"Tribute Page\",                 hours: 0, minutes: 0},\n *      { name: \"Survey Form\",                  hours: 0, minutes: 0},\n *      { name: \"Product Landing Page\",         hours: 0, minutes: 0},\n *      { name: \"Technical Documentation Page\", hours: 0, minutes: 0},\n *      { name: \"Personal Portfolio Webpage\",   hours: 0, minutes: 0}\n *    ]\n *  }\n *],\n */\n","import { NavLink      } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n    currentDayNumber,\n    initialStateYearTotalTime,\n    initialStateToday,\n    currentMonthName,\n    currentYearNumber,\n    \n}                       from '../consts/';\n\n\nfunction getInitialData (rwdc2021, currentMonthNumber) {\n    \n let data =  (JSON.parse(localStorage.getItem('rwdc2021')) || rwdc2021 );\n\n if( !data\n         .year[currentMonthNumber]\n         .days\n         .some( day => {\n           return  day.dayNumber === parseInt(currentDayNumber);\n         })\n  )  {\n         data.year[currentMonthNumber]\n               .days.push({\n                   dayNumber: parseInt(currentDayNumber),\n                   totalTime: initialStateYearTotalTime \n               });\n  }\n\n/*\n * TODO  test this \n */\n  if( data.day[currentMonthName] === undefined ) {\n         console.log('if data [currentmonthname] .... undefined');\n          data =  {\n               ...data,\n               day: {\n                   ...data.day,\n                   [currentMonthName]: {\n                       [currentDayNumber]: {\n                           ...data.today\n                      }\n                   }\n               }\n           };\n   }\n\n/*\n * TODO  test this \n */\n  if(data.day[currentMonthName][currentDayNumber] === undefined) {\n         console.log('if data [currentmonthname][currentDayNumber] .... undefined');\n           data ={\n               ...data,\n               day: {\n                   ...data.day,\n                   [currentMonthName]: {\n                       ...data.day[currentMonthName],\n                       [currentDayNumber]: {\n                            ...initialStateToday\n                       }\n                   }\n               },\n               today: {\n                   ...initialStateToday\n               }\n           };\n  }\n    return data; \n}\n\nfunction getDayTotalTime (today, name, value) {\n\n   let start1   = today.start1;\n   let end1     = today.end1;\n   let start2   = today.start2;\n   let end2     = today.end2;\n   let start3   = today.start3;\n   let end3     = today.end3;\n   let start4   = today.start4;\n   let end4     = today.end4;\n   let project1 = today.project1;   \n   let project2 = today.project2;\n   let project3 = today.project3;\n   let project4 = today.project4;\n    \n       \n   switch (name) {\n   case 'start1':\n       start1 = value;\n       break;\n   case 'end1':\n       end1   = value;\n       break;\n\n   case 'start2':\n       start2 = value;\n       break;\n   case 'end2':\n       end2   = value;\n       break;\n\n   case 'start3':\n       start3 = value;\n       break;\n   case 'end3':\n       end3   = value;\n       break;\n\n   case 'start4':\n       start4 = value;\n       break;\n\n   case 'end4':\n       end4   = value;\n       break;\n\n   case 'project1':\n       project1= value;\n       break;\n\n   case 'project2':\n       project2= value;\n       break;\n\n   case 'project3':\n       project3= value;\n       break;\n\n   case 'project4':\n       project4= value;\n       break;\n   }\n\n    let total1 = getTotalMinutes(start1, end1);\n    let total2 = getTotalMinutes(start2, end2);\n    let total3 = getTotalMinutes(start3, end3);\n    let total4 = getTotalMinutes(start4, end4);\n\n    let total1Hrs = isNaN(total1) ? 0 : Math.floor(total1 / 60);\n    let total2Hrs = isNaN(total2) ? 0 : Math.floor(total2 / 60);\n    let total3Hrs = isNaN(total3) ? 0 : Math.floor(total3 / 60);\n    let total4Hrs = isNaN(total4) ? 0 : Math.floor(total4 / 60);\n\n    let total1Min = isNaN(total1) ? 0 : total1 % 60;\n    let total2Min = isNaN(total2) ? 0 : total2 % 60;\n    let total3Min = isNaN(total3) ? 0 : total3 % 60;\n    let total4Min = isNaN(total4) ? 0 : total4 % 60;\n\n    \n    let totalProject1 = project1 === \"\" \n        ? {} \n        : { [project1]: { hours: total1Hrs, minutes: total1Min }};\n\n    let totalProject2 = project2 === \"\"\n        ? {} \n        : { [project2]: { hours: total2Hrs, minutes: total2Min }};\n\n    let totalProject3 = project3 === \"\"\n        ? {} \n        : { [project3]: { hours: total3Hrs, minutes: total3Min }};\n\n    let totalProject4 = project4 === \"\" \n        ? {} \n        : { [project4]: { hours: total4Hrs, minutes: total4Min }};\n\n\n   const temp = {\n   \"Tribute Page\":  {\n     \"hours\":                    0, \n     \"minutes\":                  0, \n   },\n\n   \"Survey Form\": {\n     \"hours\":                    0, \n     \"minutes\":                  0, \n   },\n\n   \"Product Landing Page\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n    },\n\n   \"Technical Documentation Page\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n    },\n\n   \"Personal Portfolio Webpage\": {\n      \"hours\":                    0, \n      \"minutes\":                  0, \n   }      \n   };\n\n   \n   let totalToday = [\n       { ...totalProject1},\n       { ...totalProject2},\n       { ...totalProject3},\n       { ...totalProject4},\n        \n   ];\n\n    for (let i = 0; i < totalToday.length; i++) {\n       for (const [key, value] of Object.entries(totalToday[i])) {\n          Object.assign(\n                     temp,\n                   {\n                       [key]: {\n                           hours:   temp[key].hours    + value.hours,\n                           minutes: temp[key].minutes  + value.minutes\n                       }\n                   }\n                  );      \n       }\n    }\n   \n    return temp;\n}\n\nfunction getMonthTotalTime(currentMonthDays, currentDayNumber, dayTotal) {\n\n    let total = {};\n\n    let prevTemp = {\n        \"Tribute Page\": {\n            \"hours\": 0,\n            \"minutes\": 0\n        },\n        \"Survey Form\": {\n            \"hours\": 0,\n            \"minutes\": 0\n        },\n        \"Product Landing Page\": {\n            \"hours\": 0,\n            \"minutes\": 0\n        },\n        \"Technical Documentation Page\": {\n            \"hours\": 0,\n            \"minutes\": 0\n        },\n        \"Personal Portfolio Webpage\": {\n            \"hours\":0,\n            \"minutes\": 0\n        }\n     };\n\n\n    let prev = currentMonthDays\n        .filter( pastDay => pastDay.dayNumber !== +currentDayNumber)\n        .map( day     =>  day.totalTime);\n\n    for (let i = 0; i < prev.length; i++) {\n       for (const [key, value] of Object.entries(prev[i])) {\n          Object.assign(\n                   prevTemp,\n                   {\n                       [key]: {\n                           hours:   prevTemp[key].hours    + value.hours,\n                           minutes: prevTemp[key].minutes  + value.minutes\n                       }\n                   }\n                  );      \n       }\n    }\n\n    for (const [key, value] of Object.entries(dayTotal)) {\n          Object.assign(\n                   total,\n                   {\n                       [key]: {\n                           hours:   prevTemp[key].hours    + value.hours,\n                           minutes: prevTemp[key].minutes  + value.minutes\n                       }\n                   }\n                  );      \n      }\n\n    return total;\n}\n\n\n/*\n * TODO  test this \n */\n\nfunction getTotalMinutes(startIn, endIn) {\n  let start   =  startIn.split(':') \n  let end     =  endIn.split(':')\n  let startm;  \n  let endm;  \n  let totalm;\n \n  if(+start[0] > +end[0]) {\n    totalm   = ((24 - (+start[0] - +end[0])) * 60) + (+start[1] + +end[1]) ;\n\n  } else {\n    startm = ((+start[0] * 60) + +start[1]);\n    endm   = ((+end[0]   * 60) +   +end[1]) ;\n\n    totalm = endm  - startm ;\n  }\n\n  return totalm;\n}\n\nfunction getTotalHrsMinutes (today, name, value) {\n   let start1 = today.start1;\n   let end1   = today.end1;\n   let start2 = today.start2;\n   let end2   = today.end2;\n   let start3 = today.start3;\n   let end3   = today.end3;\n   let start4 = today.start4;\n   let end4   = today.end4;\n\n   switch (name) {\n   case 'start1':\n       start1 = value;\n       break;\n   case 'end1':\n       end1   = value;\n       break;\n\n   case 'start2':\n       start2 = value;\n       break;\n   case 'end2':\n       end2   = value;\n       break;\n\n   case 'start3':\n       start3 = value;\n       break;\n   case 'end3':\n       end3   = value;\n       break;\n\n   case 'start4':\n       start4 = value;\n       break;\n\n   case 'end4':\n       end4   = value;\n       break;\n   }\n\n   let total1 = getTotalMinutes(start1, end1);\n   let total2 = getTotalMinutes(start2, end2);\n   let total3 = getTotalMinutes(start3, end3);\n   let total4 = getTotalMinutes(start4, end4);\n\n   let totalMinutes =  [ total1, total2, total3, total4 ]\n                         .filter( n => !isNaN(n))\n                        .reduce((acc, curr) =>{ return acc += curr }, 0);\n\n   let hours   = Math.floor( (totalMinutes)  /  60);\n   let minutes =    (totalMinutes) % 60;\n\n    return   { hours,  minutes };\n}\n\n// change this for something better?\nfunction getMonthNumberFromName(monthName) {\n    let number; \n    switch (monthName) {\n      case 'January':\n         number = 0;\n         break;\n\n      case 'February':\n         number = 1;\n         break;\n\n      case 'March':\n         number = 2;\n         break;\n\n      case 'April':\n         number = 3;\n         break;\n\n      case 'May':\n         number = 4;\n         break;\n\n      case 'June':\n         number = 5;\n         break;\n\n      case 'July':\n         number = 6;\n         break;\n\n      case 'August':\n         number = 7;\n         break;\n\n      case 'September':\n         number = 8;\n         break;\n\n      case 'October':\n         number = 9;\n         break;\n\n      case 'November':\n         number = 10;\n         break;\n\n      case 'December':\n         number = 11;\n         break;\n    }\n\n    return number;\n}\n\nfunction getDaysInMonth (year, month) {\n    return new Date(year, month, 0).getDate();\n}\n\nfunction getOffsetMonth( year, month) {\n    return new Date(year, month).getDay() ;\n}\n\n/*\n *  (offsetDays -1 ) + (days[i] - 1)  // JS index 0 \n */\nfunction getMonthData (monthName, days) {\n\n const monthNumber = getMonthNumberFromName(monthName);\n const daysInMonth = getDaysInMonth(currentYearNumber, monthNumber);\n const offsetDays  = getOffsetMonth(currentYearNumber, monthNumber) ;\n const arrMonth    = new Array( daysInMonth + offsetDays ).fill(\"\");\n\n for(let i = 0; i < days.length ; i++ ) {\n      arrMonth[ (offsetDays -1 ) + (days[i].dayNumber - 1)  ] =  days[i].dayNumber;\n }\n\n  return arrMonth;\n}\n\nfunction createMonth (monthName, days)  {\n    let monthData = getMonthData(monthName, days);\n\n    let links =  monthData.map( dayNumber   => {\n     if(dayNumber !== '' )  {\n         return (<td  key={uuidv4()} >{createLink(monthName, dayNumber)}</td>);\n      } else {\n         return (<td  key={uuidv4()} > </td>);\n      }\n   }); \n\n  let arrWeeksLinks = [];\n\n  for( let i = 0; i < links.length ; i++) {\n   if( i % 7 === 0)\n       arrWeeksLinks.push([]);\n       arrWeeksLinks[arrWeeksLinks.length -1].push(links[i])\n   }\n\n  let arrMonthWeeksLinks = arrWeeksLinks.map( week => (<tr key={uuidv4()}>{week}</tr>));\n\n  return arrMonthWeeksLinks;\n}\n\nfunction createLink (month, dayNumber) {\n    return  (\n        <NavLink\n            className=\"inactive\"\n            activeClassName=\"active-b\"\n            exact\n            to={`/day/${month}/${dayNumber}`}>\n            {dayNumber} \n        </NavLink>\n    );\n}\n\n/*\n * TODO change this\n */\nfunction  getDataGraph  (dataChartjs, dataYear ) {\n    let arrT     = dataYear.map( month => month.totalTime);\n    let arrTr    = []; \n    let arrSur   = [];\n    let arrPro   = [];\n    let arrTech  = [];\n    let arrPer   = [];\n\n    for(let j= 0; j < arrT.length ; j++ ) {\n        arrTr[j]  = (((arrT[j][\"Tribute Page\"].hours)*60) + arrT[j][\"Tribute Page\"].minutes)/60 ;\n    }\n    for(let j= 0; j < arrT.length ; j++ ) {\n        arrSur[j] = (((arrT[j][\"Survey Form\"].hours)*60) + arrT[j][\"Survey Form\"].minutes)/60 ;\n    }\n\n    for(let j= 0; j < arrT.length ; j++ ) {\n        arrPro[j] = (((arrT[j][\"Product Landing Page\"].hours)*60) + arrT[j][\"Product Landing Page\"].minutes)/60;\n    }\n\n    for(let j= 0; j < arrT.length ; j++ ) {\n        arrTech[j] = (((arrT[j][\"Technical Documentation Page\"].hours)*60) + arrT[j][\"Technical Documentation Page\"].minutes)/60;\n        }\n\n    for(let j= 0; j < arrT.length ; j++ ) {\n        arrPer[j] = (((arrT[j][\"Personal Portfolio Webpage\"].hours)*60) + arrT[j][\"Personal Portfolio Webpage\"].minutes)/60;\n    }\n\n    dataChartjs.datasets[0].data = arrTr;\n    dataChartjs.datasets[1].data = arrSur;\n    dataChartjs.datasets[2].data = arrPro;\n    dataChartjs.datasets[3].data = arrTech;\n    dataChartjs.datasets[4].data = arrPer;\n\n    return dataChartjs; \n\n}\n\nexport {\n    getInitialData,\n    getTotalHrsMinutes,\n    getMonthNumberFromName,\n    getDaysInMonth,\n    getOffsetMonth,\n    getMonthData,\n    getDataGraph,\n    createLink,\n    createMonth,\n    currentMonthName,\n    getDayTotalTime,\n    getMonthTotalTime\n}\n\n","\nimport { NavLink          } from 'react-router-dom';\nimport { Nav, Navbar      } from 'react-bootstrap';\n\nimport { currentMonthName } from '../../consts/';\n\nexport default function Header() {\n   return (\n      <div className=\"dashboard\">\n       <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\n           <Navbar.Brand href={process.env.PUBLIC_URL + '/'} >Journal</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/today\">\n                     TODAY \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to={`/${currentMonthName}/`}>\n                     MONTH \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/year\">\n                     YEAR \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/graph\">\n                     GRAPH\n              </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      </div>\n      );\n}\n","import {\n     Form,\n     Row,\n     Col,\n     Table,\n     InputGroup,\n     FormControl\n}                         from 'react-bootstrap';\n\n\nfunction MyTr(props) {\n    const id            = props.id;\n    const handleChange  = props.handleChange; \n    const startName     = \"start\" + props.id;\n    const startVal      = props.data[\"start\" + props.id];\n    const endName       = \"end\" + props.id;\n    const endVal        = props.data[\"end\" + props.id];\n    const projectName   = \"project\" + props.id;\n    const projectVal    = props.data[\"project\" + props.id];\n\n    return (\n        <tr id={id}>\n             <td>\n                 <Row>\n                     <Col>\n                         <Form.Control\n                             type=\"text\"\n                             disabled={projectVal === \"\" ? true : false }\n                             onChange={handleChange}\n                             name={startName} \n                             value={startVal}\n                             placeholder=\"hh:mm\"\n                         />\n                   </Col>\n                 </Row>\n             </td> \n             <td>\n                 <Row>\n                     <Col>\n                         <Form.Control\n                             type=\"text\"\n                             disabled={projectVal === \"\" ? true : false }\n                             name={endName}\n                             value={endVal}\n                             onChange={handleChange }\n                             placeholder=\"hh:mm\"\n                         />\n                      </Col>\n                 </Row>\n             </td> \n             <td>\n                 <Form.Control\n                     as=\"select\"\n                     name={projectName}\n                     value={projectVal}\n                     onChange={handleChange}\n                 >\n                   <option disabled={true}            value=\"\" >Choose ...</option> \n                   <option value=\"Tribute Page\"                >Tribute Page</option>\n                   <option value=\"Survey Form\"                 >Survey Form</option>\n                   <option value=\"Product Landing Page\"        >Product Landing  Page</option>\n                   <option value=\"Technical Documentation Page\">Technical Documentation  Page</option>\n                   <option value=\"Personal Portfolio Webpage\"  >Personal Portfolio Webpage</option>\n               </Form.Control>\n           </td> \n         </tr>\n             );\n}\n\nfunction MyTable (props) {\n    const handleChange = props.handleChange;\n    const data         = props.data; \n\n    return (\n        <Form id=\"myForm\"> \n           <Table  bordered hover responsive>\n             <thead>\n               <tr>\n                 <th>Start</th>\n                 <th>End</th>\n                 <th>Project</th>\n               </tr>\n             </thead>\n             <tbody>\n                 <MyTr\n                       id={1}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={2}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={3}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={4}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n             </tbody>\n           </Table>\n        </Form>\n    );\n }\n\nexport default function Today(props) {\n   const  currentDayName   = props.data.currentDayName;\n   const  currentMonthName = props.data.currentMonthName;\n   const  currentDayNumber = props.data.currentDayNumber;\n   const  data             = props.data;\n   const  hours            = data.totalHrs.hours   === undefined ? 0 : data.totalHrs.hours; \n   const  minutes          = data.totalHrs.minutes === undefined ? 0 : data.totalHrs.minutes; \n   const  totalHrs         = `${hours} hours,  ${minutes} minutes`;\n\n   const  comments         = props.data.comments;\n   const  handleChange     = props.handleChange;\n\n   return (\n        <>\n        <Row>\n          <Col>\n             <h2 className=\"mb-5 currentDate\">{currentDayName}, {currentMonthName} {currentDayNumber}</h2> \n         </Col>\n            </Row>\n            <Row>\n               <Col>\n                   <MyTable\n                     handleChange={handleChange}\n                     data={data}\n                     />\n               </Col>\n            </Row>\n            <Row>\n               <Col>\n                   <p className=\"float-right primary\">Total: {totalHrs}</p>\n               </Col>\n            </Row>\n           <Row>\n                <Col>\n            <h3 className=\"commentsTitle\">Comments: </h3>\n            <InputGroup>\n                <FormControl\n                    as=\"textarea\"\n                    className=\"mt-1 mb-5 commentBox\"\n                    placeholder=\"This area is for comments.&#13;To enable <Start> and <End> field: select a <Project> \"\n                    value={comments}\n                    name=\"comments\"\n                    onChange={handleChange}\n                />\n              </InputGroup>\n               </Col>\n            </Row>\n        </>\n    );\n}\n\n","import { useLocation } from 'react-router-dom';\nimport { Table       } from 'react-bootstrap';\n\nexport default function Day (props) {\n\n    const location = useLocation(); \n    const dayId    = location.pathname.split('/'); // [\"\",\"day\", \":month\", \":dayNumber\" ]\n    const data     = props.data[dayId[2]][dayId[3]];\n    const hours    = data.totalHrs.hours   === undefined ? 0 : data.totalHrs.hours; \n    const minutes  = data.totalHrs.minutes === undefined ? 0 : data.totalHrs.minutes; \n    const totalHrs = `${hours} hours,  ${minutes} minutes`;\n\n    return (\n       <>\n        <h2 className=\"mb-5 currentDate\"><span>{data.currentDayName}, {data.currentMonthName} {data.currentDayNumber}</span></h2> \n         <Table striped bordered hover responsive>\n           <thead>\n             <tr>\n               <th>Start</th>\n               <th>End</th>\n               <th>Project</th>\n             </tr>\n           </thead>\n           <tbody>\n               <tr>\n                   <td> {data.start1}  </td>\n                   <td> {data.end1}    </td>\n                   <td> {data.project1}</td>\n               </tr>\n               <tr>\n                    <td> {data.start2}  </td>\n                    <td> {data.end2}    </td>\n                    <td> {data.project2}</td>\n               </tr>\n               <tr>\n                    <td> {data.start3}  </td>\n                    <td> {data.end3}   </td>\n                    <td> {data.project3}</td>\n               </tr>\n               <tr>\n                    <td> {data.start4}  </td>\n                    <td> {data.end4}    </td>\n                    <td> {data.project4}</td>\n              </tr>\n           </tbody>\n         </Table>\n           <p className=\"float-right\">Total:{totalHrs}</p>\n\n         <h3 className=\"mt-5 commentsTitle\">Comments:</h3>\n         <p\n             className=\"p-4 comments\"\n             style={{border: '2px dashed black'}}>\n             {data.comments}\n         </p>\n       </>\n    );\n}\n","\nimport { Table        } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { createMonth  } from  '../../helpers/';\n\nexport default function Year (props) {\n    const data = props.data; \n    const arr  = data.map( month =>{\n    const ThisMonth = () => createMonth(month.monthName, month.days);\n         return (\n            <div key={uuidv4()}>\n              <h2 className=\"mt-3 currentMonth\" >{month.monthName}</h2>\n                <Table striped bordered hover responsive>\n                 <thead>\n                   <tr>\n                     <th>Monday</th>\n                     <th>Tuesday</th>\n                     <th>Wednesday</th>\n                     <th>Thursday</th>\n                     <th>Friday</th>\n                     <th>Saturday</th>\n                     <th>Sunday</th>\n                   </tr>\n                 </thead>\n                <tbody>\n                  <ThisMonth />\n               </tbody>\n             </Table>\n          </div>\n         );\n    });\n\n    return (<>{arr}</>);\n}\n","import   React          from 'react';\nimport { Table       }  from 'react-bootstrap';\nimport { createMonth }  from '../../helpers/';\n\nfunction  MyTable (props) {\n    const monthName  = props.data.monthName;\n    const days       = props.data.days\n\n    const ThisMonth  = () => createMonth(monthName, days);\n\n    return (\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>Monday</th>\n              <th>Tuesday</th>\n              <th>Wednesday</th>\n              <th>Thursday</th>\n              <th>Friday</th>\n              <th>Saturday</th>\n              <th>Sunday</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ThisMonth />\n          </tbody>\n        </Table>\n      );\n} \n\nexport default function Month(props) {\n    const monthName =  props.data.monthName;\n    const data      =  props.data;\n    return (\n        <>\n          <h2 className=\"mb-4 currentMonth\">{monthName}</h2> \n          <MyTable data={data} />\n        </>\n    );\n}\n\n\n\n\n","import   React           from 'react';\nimport { Col, Row}       from 'react-bootstrap';\nimport { Bar, defaults } from 'react-chartjs-2';\nimport { dataChartjs   } from '../../consts/';\nimport { getDataGraph  } from '../../helpers/';\n\ndefaults.global.animation = false;\ndefaults.global.maintainAspectRatio = false\n\nexport default function Graph(props) {\n    let dataYear = props.data;\n    let data     = getDataGraph(dataChartjs, dataYear ); \n\n    return (\n    <div className=\"mb-5 canvas-container\">\n        <Bar\n          data={data}\n            options={{\n                scales: {\n                    yAxes: [{\n                        stacked: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }],\n                    xAxes: [{\n                        stacked: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                    \n                }\n            }}\n        />\n    </div>\n    );\n};\n","/* Abbrev:\n * responsive web design certification =>  rwdc-2021 \n */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\n\nimport React                     from 'react';\nimport { useEffect, useState }   from 'react';\n\nimport {\n    Container,\n    Col,\n    Row\n}                                from 'react-bootstrap';\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n}                                from 'react-router-dom';\n\nimport {\n    rwdc2021,\n    currentMonthName,\n    currentDayNumber,\n}                                 from '../consts/';\n\n\nimport {\n    getInitialData,\n    getMonthNumberFromName,\n    getTotalHrsMinutes,\n    getDayTotalTime,\n    getMonthTotalTime\n}                                 from '../helpers/';\n\nimport Header                     from '../components/header/';\nimport Today                      from '../components/today/';\nimport Day                        from '../components/day/';\nimport Year                       from '../components/year/';\nimport Month                      from '../components/months/';\nimport Graph                      from '../components/graph/';\n\n//import { data as DEMODATA }       from '../data/';\n\nexport default function App() {\n\n   const currentMonthNumber  =  getMonthNumberFromName(currentMonthName);\n   const [data, setData]     = useState(() => {\n       const initialState    = getInitialData(rwdc2021, currentMonthNumber);\n       return initialState;\n    });\n\n    \n   useEffect(() => {\n      localStorage.setItem('rwdc2021', JSON.stringify(data))\n   }, [data]); \n\n    const handleChange = evt => {\n        const value             = evt.target.value\n        const name              = evt.target.name;\n        const currentMonthDays  = data.year[currentMonthNumber].days;\n        const todayTotal        = getTotalHrsMinutes(data.today, name, value);\n        const dayTotalTime      = getDayTotalTime(data.today, name, value);  \n        const monthTotalTime    = getMonthTotalTime(currentMonthDays, currentDayNumber, dayTotalTime);\n\n\n// change this: object references  modify original array  \n        const tempArr           = data.year.map( month => month );\n\n        let currentDayIndex = tempArr[currentMonthNumber]\n                                 .days.map(day=>day.dayNumber)\n                                 .indexOf(parseInt(currentDayNumber));\n\n        // YEAR DAY totalTime\n        tempArr[currentMonthNumber]\n            .days[currentDayIndex]\n            .totalTime               = dayTotalTime; \n\n        // YEAR MONTH totalTime \n        tempArr[currentMonthNumber]\n            .totalTime               = monthTotalTime; \n       \n        setData({\n            ...data,\n            today: {\n                ...data.today,\n                [evt.target.name]: value,\n                totalHrs: { hours: todayTotal.hours, minutes: todayTotal.minutes} \n            },\n            day: {\n                ...data.day,\n                [currentMonthName]: {\n                       ...data.day[currentMonthName],\n                    [currentDayNumber]: {\n                        ...data.today,\n                      [evt.target.name]: value, \n                      totalHrs: { hours: todayTotal.hours, minutes: todayTotal.minutes}  \n                    }\n                }\n            }, \n\n// change this: object references  modify original array \n            year: [...tempArr]\n        });\n    }; \n\n  return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n            <Container>\n                <h1 className=\"mt-5 mb-5 title\"><u>Responsive Web Design Certification:</u></h1> \n             <Row>\n                <Col>\n             <Switch>\n               <Route exact path=\"/\">\n                  <Today data={data.today} handleChange={handleChange} />\n               </Route>\n                <Route exact path=\"/today\">\n                  <Today data={data.today} handleChange={handleChange} />\n               </Route>\n               <Route exact path={`/${currentMonthName}`}>\n                  <Month data={data.year[currentMonthNumber] } />\n               </Route>\n                <Route exact path=\"/year\">\n                  <Year data={data.year}  />\n               </Route>\n               <Route path=\"/graph\">\n                 <Graph  data={data.year}/>\n               </Route>\n               <Route path=\"/day/\">\n                  <Day data={data.day} />\n               </Route>\n             </Switch>\n             </Col>\n           </Row>\n          </Container>\n      </Router>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}