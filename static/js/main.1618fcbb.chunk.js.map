{"version":3,"sources":["consts/index.js","helpers/index.js","components/header/index.js","components/today/index.js","components/day/index.js","components/year/index.js","components/months/index.js","components/graph/index.js","layouts/index.js","index.js"],"names":["date","Date","currentMonthName","getMonth","toLocaleString","month","currentDayName","weekday","currentDayNumber","day","currentYearNumber","year","tributePageColor","surveyFormColor","productLandingPageColor","techDocPageColor","personalPortfolioColor","dataChartjs","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","minBarLength","initialStateToday","comments","start1","start2","start3","start4","end1","end2","end3","end4","project1","project2","project3","project4","totalHrs","initialStateYearTotalTime","hours","minutes","initialStateYear","monthName","days","totalTime","rwdc2021","today","getTotalMinutes","startIn","endIn","startm","totalm","start","split","end","getMonthNumberFromName","number","getMonthData","monthNumber","daysInMonth","getDate","offsetDays","getDay","getOffsetMonth","arrMonth","Array","fill","i","length","dayNumber","createMonth","links","map","createLink","uuidv4","arrWeeksLinks","push","week","className","activeClassName","exact","to","Header","Navbar","bg","variant","expand","Brand","href","process","Toggle","aria-controls","Collapse","id","Nav","replace","MyTr","props","handleChange","startName","startVal","data","endName","endVal","projectName","projectVal","Form","Control","as","name","value","onChange","disabled","type","placeholder","MyTable","Table","bordered","hover","responsive","Today","undefined","Row","Col","InputGroup","FormControl","Day","dayId","useLocation","pathname","striped","style","border","Year","arr","ThisMonth","Month","Graph","dataYear","arrT","arrTr","arrSur","arrPro","arrTech","arrPer","j","getDataGraph","options","scales","yAxes","stacked","ticks","beginAtZero","xAxes","App","currentMonthNumber","useState","JSON","parse","localStorage","getItem","some","parseInt","console","log","getInitialData","setData","useEffect","setItem","stringify","useCallback","evt","target","currentMonthDays","todayTotal","totalMinutes","filter","n","isNaN","reduce","acc","curr","Math","floor","getTotalHrsMinutes","dayTotalTime","total1","total2","total3","total4","total1Hrs","total2Hrs","total3Hrs","total4Hrs","total1Min","total2Min","total3Min","total4Min","totalProject1","totalProject2","totalProject3","totalProject4","temp","totalToday","Object","entries","key","assign","getDayTotalTime","monthTotalTime","dayTotal","total","prevTemp","prev","pastDay","getMonthTotalTime","currentDayIndex","indexOf","produce","draft","Container","path","defaults","global","animation","maintainAspectRatio","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1618fcbb.chunk.js","sourcesContent":["const date = new Date();\n\nconst currentMonthNumber = date.getMonth();\nconst currentMonthName = `${date.toLocaleString(\"en-US\", { month: \"long\" })}`;\n\nconst currentDayName = `${date.toLocaleString(\"en-US\", { weekday: \"long\" })}`;\nconst currentDayNumber = `${date.toLocaleString(\"en-US\", { day: \"numeric\" })}`;\n\nconst currentYearNumber = `${date.toLocaleString(\"en-US\", {\n  year: \"numeric\",\n})}`;\n\nconst tributePageColor = \"rgba(0,   120, 200, 1)\";\nconst tributePageColor1 = \"rgba(0,   120, 200, 0.5)\";\n\nconst surveyFormColor = \"rgba(0,   200,   0, 1)\";\nconst surveyFormColor1 = \"rgba(0,   200,   0, 0.5)\";\n\nconst productLandingPageColor = \"rgba(170,   0, 200, 1)\";\nconst productLandingPageColor1 = \"rgba(170,   0, 200, 0.5)\";\n\nconst techDocPageColor = \"rgba(255, 190,   0, 1)\";\nconst techDocPageColor1 = \"rgba(255, 190,   0, 0.5)\";\n\nconst personalPortfolioColor = \"rgba(255, 100,   0, 1)\";\nconst personalPortfolioColor1 = \"rgba(255, 100,   0, 0.5)\";\n\nconst dataChartjs = {\n  labels: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n  datasets: [\n    {\n      label: \"Tribute Page\",\n      backgroundColor: tributePageColor,\n      borderColor: tributePageColor,\n      borderWidth: 1,\n      hoverBackgroundColor: tributePageColor1,\n      hoverBorderColor: tributePageColor,\n      minBarLength: 1,\n    },\n    {\n      label: \"Survey Form\",\n      backgroundColor: surveyFormColor,\n      borderColor: surveyFormColor,\n      borderWidth: 1,\n      hoverBackgroundColor: surveyFormColor1,\n      hoverBorderColor: surveyFormColor,\n      minBarLength: 1,\n    },\n    {\n      label: \"Product Landing Page\",\n      backgroundColor: productLandingPageColor,\n      borderColor: productLandingPageColor,\n      borderWidth: 1,\n      hoverBackgroundColor: productLandingPageColor1,\n      hoverBorderColor: productLandingPageColor,\n      minBarLength: 1,\n    },\n    {\n      label: \"Technical Documentation Page\",\n      backgroundColor: techDocPageColor,\n      borderColor: techDocPageColor,\n      borderWidth: 1,\n      hoverBackgroundColor: techDocPageColor1,\n      hoverBorderColor: techDocPageColor,\n      minBarLength: 1,\n    },\n    {\n      label: \"Personal Portfolio Webpage\",\n      backgroundColor: personalPortfolioColor,\n      borderColor: personalPortfolioColor,\n      borderWidth: 1,\n      hoverBackgroundColor: personalPortfolioColor1,\n      hoverBorderColor: personalPortfolioColor,\n      minBarLength: 1,\n    },\n  ],\n};\n\nconst initialStateToday = {\n  currentDayName: currentDayName,\n  currentMonthName: currentMonthName,\n  currentDayNumber: currentDayNumber,\n  comments: \"\",\n  start1: \"\",\n  start2: \"\",\n  start3: \"\",\n  start4: \"\",\n  end1: \"\",\n  end2: \"\",\n  end3: \"\",\n  end4: \"\",\n  project1: \"\",\n  project2: \"\",\n  project3: \"\",\n  project4: \"\",\n  totalHrs: 0,\n};\n\nconst initialStateYearTotalTime = {\n  \"Tribute Page\": {\n    hours: 0,\n    minutes: 0,\n  },\n\n  \"Survey Form\": {\n    hours: 0,\n    minutes: 0,\n  },\n\n  \"Product Landing Page\": {\n    hours: 0,\n    minutes: 0,\n  },\n\n  \"Technical Documentation Page\": {\n    hours: 0,\n    minutes: 0,\n  },\n\n  \"Personal Portfolio Webpage\": {\n    hours: 0,\n    minutes: 0,\n  },\n};\n\n/*\nyear\n  {\n  monthName: string \n  days: [\n  { \n    dayNumber: number \n    totalTime: {\n      \"Tribute Page\":  {\n        \"hours\":                    0, \n        \"minutes\":                  0, \n      },\n\n      \"Survey Form\": {\n        \"hours\":                    0, \n        \"minutes\":                  0, \n      },\n\n      \"Product Landing Page\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n       },\n\n      \"Technical Documentation Page\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n       },\n      {\n      \"Personal Portfolio Webpage\": {\n         \"hours\":                    0, \n         \"minutes\":                  0, \n      } \n   }\n ]  \n*/\nconst initialStateYear = [\n  {\n    monthName: \"January\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"February\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"March\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"April\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"May\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"June\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"July\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"August\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"September\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"October\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"November\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n  {\n    monthName: \"December\",\n    days: [],\n    totalTime: initialStateYearTotalTime,\n  },\n];\n\nconst rwdc2021 = {\n  day: {\n    [currentMonthName]: {\n      [currentDayNumber]: {\n        ...initialStateToday,\n      },\n    },\n  },\n  today: {\n    ...initialStateToday,\n  },\n  year: initialStateYear,\n};\n\nexport {\n  currentMonthNumber,\n  currentMonthName,\n  currentDayName,\n  currentDayNumber,\n  currentYearNumber,\n  dataChartjs,\n  initialStateToday,\n  initialStateYearTotalTime,\n  rwdc2021,\n};\n\n/* year:\n * \"days\": [\n *  {\n *    \"dayNumber\": 0,\n *    \"totalTime\": [\n *      { name: \"Tribute Page\",                 hours: 0, minutes: 0},\n *      { name: \"Survey Form\",                  hours: 0, minutes: 0},\n *      { name: \"Product Landing Page\",         hours: 0, minutes: 0},\n *      { name: \"Technical Documentation Page\", hours: 0, minutes: 0},\n *      { name: \"Personal Portfolio Webpage\",   hours: 0, minutes: 0}\n *    ]\n *  }\n *],\n */\n","import { NavLink } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  currentDayNumber,\n  initialStateYearTotalTime,\n  initialStateToday,\n  currentMonthName,\n  currentYearNumber,\n} from \"../consts/\";\n\n/**\n * Function description.\n * @param   {object} rwdc2021 - Application data. Can be: a localStorage item or an object.\n * @param   {number} currentMonthNumber - The current month. Months are numerated from 0 to 11.\n * @returns {object} Application data.\n */\nfunction getInitialData(rwdc2021, currentMonthNumber) {\n  let data = JSON.parse(localStorage.getItem(\"rwdc2021\")) || rwdc2021;\n  if (\n    !data.year[currentMonthNumber].days.some((day) => {\n      return day.dayNumber === parseInt(currentDayNumber);\n    })\n  ) {\n    data.year[currentMonthNumber].days.push({\n      dayNumber: parseInt(currentDayNumber),\n      totalTime: initialStateYearTotalTime,\n    });\n  }\n\n  /*\n   * TODO  test this\n   */\n  if (data.day[currentMonthName] === undefined) {\n    console.log(\"if data [currentmonthname] .... undefined\");\n    data = {\n      ...data,\n      day: {\n        ...data.day,\n        [currentMonthName]: {\n          [currentDayNumber]: {\n            ...data.today,\n          },\n        },\n      },\n    };\n  }\n\n  /*\n   * TODO  test this\n   */\n  if (data.day[currentMonthName][currentDayNumber] === undefined) {\n    console.log(\"if data [currentmonthname][currentDayNumber] .... undefined\");\n    data = {\n      ...data,\n      day: {\n        ...data.day,\n        [currentMonthName]: {\n          ...data.day[currentMonthName],\n          [currentDayNumber]: {\n            ...initialStateToday,\n          },\n        },\n      },\n      today: {\n        ...initialStateToday,\n      },\n    };\n  }\n  return data;\n}\n\n/**\n * Function description.\n * @param   {object} today - Parameter description.\n * @param   {string} name  - Because Form.Control name (project1-4).\n * @param   {string} value - Because Form.Control value.\n * @returns {object} total time (current day) of all projects\n */\nfunction getDayTotalTime(today, name, value) {\n  let start1 = today.start1;\n  let end1 = today.end1;\n  let start2 = today.start2;\n  let end2 = today.end2;\n  let start3 = today.start3;\n  let end3 = today.end3;\n  let start4 = today.start4;\n  let end4 = today.end4;\n  let project1 = today.project1;\n  let project2 = today.project2;\n  let project3 = today.project3;\n  let project4 = today.project4;\n\n  switch (name) {\n    case \"start1\":\n      start1 = value;\n      break;\n    case \"end1\":\n      end1 = value;\n      break;\n\n    case \"start2\":\n      start2 = value;\n      break;\n    case \"end2\":\n      end2 = value;\n      break;\n\n    case \"start3\":\n      start3 = value;\n      break;\n    case \"end3\":\n      end3 = value;\n      break;\n\n    case \"start4\":\n      start4 = value;\n      break;\n\n    case \"end4\":\n      end4 = value;\n      break;\n\n    case \"project1\":\n      project1 = value;\n      break;\n\n    case \"project2\":\n      project2 = value;\n      break;\n\n    case \"project3\":\n      project3 = value;\n      break;\n\n    case \"project4\":\n      project4 = value;\n      break;\n  }\n\n  let total1 = getTotalMinutes(start1, end1);\n  let total2 = getTotalMinutes(start2, end2);\n  let total3 = getTotalMinutes(start3, end3);\n  let total4 = getTotalMinutes(start4, end4);\n\n  let total1Hrs = isNaN(total1) ? 0 : Math.floor(total1 / 60);\n  let total2Hrs = isNaN(total2) ? 0 : Math.floor(total2 / 60);\n  let total3Hrs = isNaN(total3) ? 0 : Math.floor(total3 / 60);\n  let total4Hrs = isNaN(total4) ? 0 : Math.floor(total4 / 60);\n\n  let total1Min = isNaN(total1) ? 0 : total1 % 60;\n  let total2Min = isNaN(total2) ? 0 : total2 % 60;\n  let total3Min = isNaN(total3) ? 0 : total3 % 60;\n  let total4Min = isNaN(total4) ? 0 : total4 % 60;\n\n  let totalProject1 =\n    project1 === \"\"\n      ? {}\n      : { [project1]: { hours: total1Hrs, minutes: total1Min } };\n\n  let totalProject2 =\n    project2 === \"\"\n      ? {}\n      : { [project2]: { hours: total2Hrs, minutes: total2Min } };\n\n  let totalProject3 =\n    project3 === \"\"\n      ? {}\n      : { [project3]: { hours: total3Hrs, minutes: total3Min } };\n\n  let totalProject4 =\n    project4 === \"\"\n      ? {}\n      : { [project4]: { hours: total4Hrs, minutes: total4Min } };\n\n  const temp = {\n    \"Tribute Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n\n    \"Survey Form\": {\n      hours: 0,\n      minutes: 0,\n    },\n\n    \"Product Landing Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n\n    \"Technical Documentation Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n\n    \"Personal Portfolio Webpage\": {\n      hours: 0,\n      minutes: 0,\n    },\n  };\n\n  let totalToday = [\n    { ...totalProject1 },\n    { ...totalProject2 },\n    { ...totalProject3 },\n    { ...totalProject4 },\n  ];\n\n  for (let i = 0; i < totalToday.length; i++) {\n    for (const [key, value] of Object.entries(totalToday[i])) {\n      Object.assign(temp, {\n        [key]: {\n          hours: temp[key].hours + value.hours,\n          minutes: temp[key].minutes + value.minutes,\n        },\n      });\n    }\n  }\n\n  return temp;\n}\n\n/**\n * Function description.\n * @param   {array}  currentMonthDays - All days and total time of every project.\n * @param   {string} currentDayNumber -\n * @param   {object} dayTotal         - total time of every project (current day)\n * @returns {object} total time of every project (month)\n */\nfunction getMonthTotalTime(currentMonthDays, currentDayNumber, dayTotal) {\n  let total = {};\n\n  let prevTemp = {\n    \"Tribute Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n    \"Survey Form\": {\n      hours: 0,\n      minutes: 0,\n    },\n    \"Product Landing Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n    \"Technical Documentation Page\": {\n      hours: 0,\n      minutes: 0,\n    },\n    \"Personal Portfolio Webpage\": {\n      hours: 0,\n      minutes: 0,\n    },\n  };\n\n  let prev = currentMonthDays\n    .filter((pastDay) => pastDay.dayNumber !== +currentDayNumber)\n    .map((day) => day.totalTime);\n\n  for (let i = 0; i < prev.length; i++) {\n    for (const [key, value] of Object.entries(prev[i])) {\n      Object.assign(prevTemp, {\n        [key]: {\n          hours: prevTemp[key].hours + value.hours,\n          minutes: prevTemp[key].minutes + value.minutes,\n        },\n      });\n    }\n  }\n\n  for (const [key, value] of Object.entries(dayTotal)) {\n    Object.assign(total, {\n      [key]: {\n        hours: prevTemp[key].hours + value.hours,\n        minutes: prevTemp[key].minutes + value.minutes,\n      },\n    });\n  }\n\n  return total;\n}\n\n/**\n * Function description.\n * @param   {string} startIn - start time\n * @param   {string} endIn   - end   time\n * @returns {number} total time in minutes (from start to end)\n */\nfunction getTotalMinutes(startIn, endIn) {\n  let start = startIn.split(\":\");\n  let end = endIn.split(\":\");\n  let startm;\n  let endm;\n  let totalm;\n\n  if (+start[0] > +end[0]) {\n    totalm = (24 - (+start[0] - +end[0])) * 60 + (+start[1] + +end[1]);\n  } else {\n    startm = +start[0] * 60 + +start[1];\n    endm = +end[0] * 60 + +end[1];\n\n    totalm = endm - startm;\n  }\n\n  return totalm;\n}\n\n/**\n * Function description.\n * @param   {object} today - current day data.\n * @param   {string} name  - Because Form.Control name  (project1-4).\n * @param   {string} value - Because Form.Control value.\n * @returns {object} hours and minutes\n */\nfunction getTotalHrsMinutes(today, name, value) {\n  let start1 = today.start1;\n  let end1 = today.end1;\n  let start2 = today.start2;\n  let end2 = today.end2;\n  let start3 = today.start3;\n  let end3 = today.end3;\n  let start4 = today.start4;\n  let end4 = today.end4;\n\n  switch (name) {\n    case \"start1\":\n      start1 = value;\n      break;\n    case \"end1\":\n      end1 = value;\n      break;\n\n    case \"start2\":\n      start2 = value;\n      break;\n    case \"end2\":\n      end2 = value;\n      break;\n\n    case \"start3\":\n      start3 = value;\n      break;\n    case \"end3\":\n      end3 = value;\n      break;\n\n    case \"start4\":\n      start4 = value;\n      break;\n\n    case \"end4\":\n      end4 = value;\n      break;\n  }\n\n  let total1 = getTotalMinutes(start1, end1);\n  let total2 = getTotalMinutes(start2, end2);\n  let total3 = getTotalMinutes(start3, end3);\n  let total4 = getTotalMinutes(start4, end4);\n\n  let totalMinutes = [total1, total2, total3, total4]\n    .filter((n) => !isNaN(n))\n    .reduce((acc, curr) => {\n      return (acc += curr);\n    }, 0);\n\n  let hours = Math.floor(totalMinutes / 60);\n  let minutes = totalMinutes % 60;\n\n  return { hours, minutes };\n}\n\n/**\n * Function description.  change this for something better?\n * @param {string}   monthName  -\n * @returns {number} Months numbered from 0 to 11\n */\nfunction getMonthNumberFromName(monthName) {\n  let number;\n  switch (monthName) {\n    case \"January\":\n      number = 0;\n      break;\n\n    case \"February\":\n      number = 1;\n      break;\n\n    case \"March\":\n      number = 2;\n      break;\n\n    case \"April\":\n      number = 3;\n      break;\n\n    case \"May\":\n      number = 4;\n      break;\n\n    case \"June\":\n      number = 5;\n      break;\n\n    case \"July\":\n      number = 6;\n      break;\n\n    case \"August\":\n      number = 7;\n      break;\n\n    case \"September\":\n      number = 8;\n      break;\n\n    case \"October\":\n      number = 9;\n      break;\n\n    case \"November\":\n      number = 10;\n      break;\n\n    case \"December\":\n      number = 11;\n      break;\n  }\n\n  // change this (number) use other name\n  return number;\n}\n\n/**\n * Function description.\n * @param   {string} year  - '2022'\n * @param   {number} month - 0\n * @returns {number} - 28 ? new date returns a number??\n */\nfunction getDaysInMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\n/**\n * Function description.\n * @param   {string} year - '2022'\n * @param   {number} month - 0\n * @returns {number} 2\n */\nfunction getOffsetMonth(year, month) {\n  return new Date(year, month).getDay();\n}\n\n/**\n * Function description. (offsetDays -1 ) + (days[i] - 1)  // JS index 0\n * @param {string} monthName - 'February'\n * @param {array} days - Parameter description.\n * @returns {array} array of days with  projects data\n */\nfunction getMonthData(monthName, days) {\n  const monthNumber = getMonthNumberFromName(monthName);\n  const daysInMonth = getDaysInMonth(currentYearNumber, monthNumber);\n  const offsetDays = getOffsetMonth(currentYearNumber, monthNumber);\n  const arrMonth = new Array(daysInMonth + offsetDays).fill(\"\");\n\n  for (let i = 0; i < days.length; i++) {\n    arrMonth[offsetDays - 1 + (days[i].dayNumber - 1)] = days[i].dayNumber;\n  }\n  return arrMonth;\n}\n\n/**\n * Function description.\n * @param {string} monthName - 'February'\n * @param {array} days - empty array???\n * @returns {array}  array of react elements\n */\nfunction createMonth(monthName, days) {\n  let monthData = getMonthData(monthName, days);\n\n  let links = monthData.map((dayNumber) => {\n    if (dayNumber !== \"\") {\n      return <td key={uuidv4()}>{createLink(monthName, dayNumber)}</td>;\n    } else {\n      return <td key={uuidv4()}> </td>;\n    }\n  });\n\n  let arrWeeksLinks = [];\n\n  for (let i = 0; i < links.length; i++) {\n    if (i % 7 === 0) arrWeeksLinks.push([]);\n    arrWeeksLinks[arrWeeksLinks.length - 1].push(links[i]);\n  }\n\n  let arrMonthWeeksLinks = arrWeeksLinks.map((week) => (\n    <tr key={uuidv4()}>{week}</tr>\n  ));\n\n  return arrMonthWeeksLinks;\n}\n\n/**\n * Function description.\n * @param   {string} month - 'February'\n * @param   {number} dayNumber - 8\n * @returns {object} object?? react element??\n */\nfunction createLink(month, dayNumber) {\n  return (\n    <NavLink\n      className=\"inactive\"\n      activeClassName=\"active-b\"\n      exact\n      to={`/day/${month}/${dayNumber}`}\n    >\n      {dayNumber}\n    </NavLink>\n  );\n}\n\n/**\n * Function description. TODO change this\n * @param   {obj} dataChartjs - datasets and labels\n * @param   {array} dataYear  - data.year\n * @returns {object} updated datasets and labels\n */\nfunction getDataGraph(dataChartjs, dataYear) {\n  let arrT = dataYear.map((month) => month.totalTime);\n  let arrTr = [];\n  let arrSur = [];\n  let arrPro = [];\n  let arrTech = [];\n  let arrPer = [];\n\n  for (let j = 0; j < arrT.length; j++) {\n    arrTr[j] =\n      (arrT[j][\"Tribute Page\"].hours * 60 + arrT[j][\"Tribute Page\"].minutes) /\n      60;\n  }\n  for (let j = 0; j < arrT.length; j++) {\n    arrSur[j] =\n      (arrT[j][\"Survey Form\"].hours * 60 + arrT[j][\"Survey Form\"].minutes) / 60;\n  }\n\n  for (let j = 0; j < arrT.length; j++) {\n    arrPro[j] =\n      (arrT[j][\"Product Landing Page\"].hours * 60 +\n        arrT[j][\"Product Landing Page\"].minutes) /\n      60;\n  }\n\n  for (let j = 0; j < arrT.length; j++) {\n    arrTech[j] =\n      (arrT[j][\"Technical Documentation Page\"].hours * 60 +\n        arrT[j][\"Technical Documentation Page\"].minutes) /\n      60;\n  }\n\n  for (let j = 0; j < arrT.length; j++) {\n    arrPer[j] =\n      (arrT[j][\"Personal Portfolio Webpage\"].hours * 60 +\n        arrT[j][\"Personal Portfolio Webpage\"].minutes) /\n      60;\n  }\n\n  dataChartjs.datasets[0].data = arrTr;\n  dataChartjs.datasets[1].data = arrSur;\n  dataChartjs.datasets[2].data = arrPro;\n  dataChartjs.datasets[3].data = arrTech;\n  dataChartjs.datasets[4].data = arrPer;\n\n  return dataChartjs;\n}\n\nexport {\n  getInitialData,\n  getTotalHrsMinutes,\n  getMonthNumberFromName,\n  getDaysInMonth,\n  getOffsetMonth,\n  getMonthData,\n  getDataGraph,\n  createLink,\n  createMonth,\n  currentMonthName,\n  getDayTotalTime,\n  getMonthTotalTime,\n};\n","\nimport { NavLink          } from 'react-router-dom';\nimport { Nav, Navbar      } from 'react-bootstrap';\n\nimport { currentMonthName } from '../../consts/';\n\nexport default function Header() {\n   return (\n      <div className=\"dashboard\">\n       <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\n           <Navbar.Brand href={process.env.PUBLIC_URL + '/'} >Journal</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/today\">\n                     TODAY \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to={`/${currentMonthName}/`}>\n                     MONTH \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/year\">\n                     YEAR \n              </NavLink>\n              <NavLink\n                  className=\"inactive\"\n                  activeClassName=\"active-b\"\n                  replace\n                  exact\n                  to=\"/graph\">\n                     GRAPH\n              </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      </div>\n      );\n}\n","import {\n     Form,\n     Row,\n     Col,\n     Table,\n     InputGroup,\n     FormControl\n}                         from 'react-bootstrap';\n\n\nfunction MyTr(props) {\n    const id            = props.id;\n    const handleChange  = props.handleChange; \n    const startName     = \"start\" + props.id;\n    const startVal      = props.data[\"start\" + props.id];\n    const endName       = \"end\" + props.id;\n    const endVal        = props.data[\"end\" + props.id];\n    const projectName   = \"project\" + props.id;\n    const projectVal    = props.data[\"project\" + props.id];\n\n    return (\n        <tr id={id}>\n             <td>\n                 <Form.Control\n                     as=\"select\"\n                     name={projectName}\n                     value={projectVal}\n                     onChange={handleChange}\n                 >\n                     <option disabled={true}            value=\"\" >Choose ...</option> \n                     <option value=\"Tribute Page\"                >Tribute Page</option>\n                     <option value=\"Survey Form\"                 >Survey Form</option>\n                     <option value=\"Product Landing Page\"        >Product Landing  Page</option>\n                     <option value=\"Technical Documentation Page\">Technical Documentation  Page</option>\n                     <option value=\"Personal Portfolio Webpage\"  >Personal Portfolio Webpage</option>\n                 </Form.Control>\n             </td> \n             <td>\n                <Form.Control\n                    type=\"text\"\n                    disabled={projectVal === \"\" ? true : false }\n                    name={startName} \n                    value={startVal}\n                    onChange={handleChange }\n                    placeholder=\"hh:mm\"\n                />\n             </td> \n             <td>\n                 <Form.Control\n                     type=\"text\"\n                     disabled={projectVal === \"\" ? true : false }\n                     onChange={handleChange}\n                     name={endName}\n                     value={endVal}\n                     placeholder=\"hh:mm\"\n                 />\n             </td> \n         </tr>\n      );\n}\n\nfunction MyTable (props) {\n    const handleChange = props.handleChange;\n    const data         = props.data; \n\n    return (\n        <Form id=\"myForm\"> \n           <Table  bordered hover responsive>\n             <thead>\n               <tr>\n                 <th>Project</th>\n                 <th>Start</th>\n                 <th>End</th>\n               </tr>\n             </thead>\n             <tbody>\n                 <MyTr\n                       id={1}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={2}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={3}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n        \n                 <MyTr\n                       id={4}\n                       handleChange={handleChange}\n                       data={data}\n                       />\n             </tbody>\n           </Table>\n        </Form>\n    );\n }\n\nexport default function Today(props) {\n   const  currentDayName   = props.data.currentDayName;\n   const  currentMonthName = props.data.currentMonthName;\n   const  currentDayNumber = props.data.currentDayNumber;\n   const  data             = props.data;\n   const  hours            = data.totalHrs.hours   === undefined ? 0 : data.totalHrs.hours; \n   const  minutes          = data.totalHrs.minutes === undefined ? 0 : data.totalHrs.minutes; \n   const  totalHrs         = `${hours} hours,  ${minutes} minutes`;\n\n   const  comments         = props.data.comments;\n   const  handleChange     = props.handleChange;\n\n   return (\n        <>\n        <Row>\n           <Col>\n             <h2 className=\"mb-5 currentDate\">{currentDayName}, {currentMonthName} {currentDayNumber}</h2> \n          </Col>\n        </Row>\n        <Row>\n          <Col>\n              <MyTable\n                handleChange={handleChange}\n                data={data}\n                />\n          </Col>\n       </Row>\n       <Row>\n         <Col>\n             <p className=\"float-right primary\">Total: {totalHrs}</p>\n         </Col>\n       </Row>\n       <Row>\n         <Col>\n           <h3 className=\"commentsTitle\">Comments: </h3>\n              <InputGroup>\n                  <FormControl\n                    as=\"textarea\"\n                    className=\"mt-1 mb-5 commentBox\"\n                    placeholder=\"This area is for comments.&#13;To enable <Start> and <End> field: select a <Project> \"\n                    value={comments}\n                    name=\"comments\"\n                    onChange={handleChange}\n                />\n              </InputGroup>\n        </Col>\n      </Row>\n        </>\n    );\n}\n\n","import { useLocation } from 'react-router-dom';\nimport { Table       } from 'react-bootstrap';\n\nexport default function Day (props) {\n\n    const location = useLocation(); \n    const dayId    = location.pathname.split('/'); // [\"\",\"day\", \":month\", \":dayNumber\" ]\n    const data     = props.data[dayId[2]][dayId[3]];\n    const hours    = data.totalHrs.hours   === undefined ? 0 : data.totalHrs.hours; \n    const minutes  = data.totalHrs.minutes === undefined ? 0 : data.totalHrs.minutes; \n    const totalHrs = `${hours} hours,  ${minutes} minutes`;\n\n    return (\n       <>\n        <h2 className=\"mb-5 currentDate\">{data.currentDayName}, {data.currentMonthName} {data.currentDayNumber}</h2> \n         <Table striped bordered hover responsive>\n           <thead>\n             <tr>\n               <th>Start</th>\n               <th>End</th>\n               <th>Project</th>\n             </tr>\n           </thead>\n           <tbody>\n               <tr>\n                   <td> {data.start1}  </td>\n                   <td> {data.end1}    </td>\n                   <td> {data.project1}</td>\n               </tr>\n               <tr>\n                    <td> {data.start2}  </td>\n                    <td> {data.end2}    </td>\n                    <td> {data.project2}</td>\n               </tr>\n               <tr>\n                    <td> {data.start3}  </td>\n                    <td> {data.end3}   </td>\n                    <td> {data.project3}</td>\n               </tr>\n               <tr>\n                    <td> {data.start4}  </td>\n                    <td> {data.end4}    </td>\n                    <td> {data.project4}</td>\n              </tr>\n           </tbody>\n         </Table>\n           <p className=\"float-right\">Total:{totalHrs}</p>\n\n         <h3 className=\"mt-5 commentsTitle\">Comments:</h3>\n         <p\n             className=\"p-4 comments\"\n             style={{border: '2px dashed black'}}>\n             {data.comments}\n         </p>\n       </>\n    );\n}\n","\nimport { Table        } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { createMonth  } from  '../../helpers/';\n\nexport default function Year (props) {\n    const data = props.data; \n    const arr  = data.map( month =>{\n    const ThisMonth = () => createMonth(month.monthName, month.days);\n         return (\n            <div key={uuidv4()}>\n              <h2 className=\"mt-3 currentMonth\" >{month.monthName}</h2>\n                <Table striped bordered hover responsive>\n                 <thead>\n                   <tr>\n                     <th>M</th>\n                     <th>T</th>\n                     <th>W</th>\n                     <th>T</th>\n                     <th>F</th>\n                     <th>S</th>\n                     <th>S</th>\n                   </tr>\n                 </thead>\n                <tbody>\n                  <ThisMonth />\n               </tbody>\n             </Table>\n          </div>\n         );\n    });\n\n    return (<>{arr}</>);\n}\n","import   React          from 'react';\nimport { Table       }  from 'react-bootstrap';\nimport { createMonth }  from '../../helpers/';\n\nfunction  MyTable (props) {\n    const monthName  = props.data.monthName;\n    const days       = props.data.days\n\n    const ThisMonth  = () => createMonth(monthName, days);\n\n    return (\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>M</th>\n              <th>T</th>\n              <th>W</th>\n              <th>T</th>\n              <th>F</th>\n              <th>S</th>\n              <th>S</th>\n            </tr>\n          </thead>\n          <tbody>\n            <ThisMonth />\n          </tbody>\n        </Table>\n      );\n} \n\nexport default function Month(props) {\n    const monthName =  props.data.monthName;\n    const data      =  props.data;\n    return (\n        <>\n          <h2 className=\"mb-4 currentMonth\">{monthName}</h2> \n          <MyTable data={data} />\n        </>\n    );\n}\n\n\n\n\n","import   React           from 'react';\nimport { Bar, defaults } from 'react-chartjs-2';\nimport { dataChartjs   } from '../../consts/';\nimport { getDataGraph  } from '../../helpers/';\n\ndefaults.global.animation = false;\ndefaults.global.maintainAspectRatio = false\n\nexport default function Graph(props) {\n    let dataYear = props.data;\n    let data     = getDataGraph(dataChartjs, dataYear ); \n\n    return (\n    <div className=\"mb-5 canvas-container\">\n        <Bar\n          data={data}\n            options={{\n                scales: {\n                    yAxes: [{\n                        stacked: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }],\n                    xAxes: [{\n                        stacked: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                    \n                }\n            }}\n        />\n    </div>\n    );\n};\n","/* Abbrev:\n * responsive web design certification =>  rwdc-2021 \n */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\n\nimport   React    from 'react';\nimport { useEffect, useState,  useCallback }   from 'react';\nimport   produce  from 'immer';\n\nimport {\n    Container,\n    Col,\n    Row\n}                                from 'react-bootstrap';\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n}                                from 'react-router-dom';\n\nimport {\n    rwdc2021,\n    currentMonthName,\n    currentDayNumber,\n}                                 from '../consts/';\n\n\nimport {\n    getInitialData,\n    getMonthNumberFromName,\n    getTotalHrsMinutes,\n    getDayTotalTime,\n    getMonthTotalTime\n}                                 from '../helpers/';\n\nimport Header                     from '../components/header/';\nimport Today                      from '../components/today/';\nimport Day                        from '../components/day/';\nimport Year                       from '../components/year/';\nimport Month                      from '../components/months/';\nimport Graph                      from '../components/graph/';\n\n//import { data as DEMODATA }       from '../data/';\n\nexport default function App() {\n\n   const currentMonthNumber  =  getMonthNumberFromName(currentMonthName);\n   const [data, setData]     = useState(() => {\n       const initialState    = getInitialData(rwdc2021, currentMonthNumber);\n       return initialState;\n    });\n\n    \n   useEffect(() => {\n      localStorage.setItem('rwdc2021', JSON.stringify(data))\n   }, [data]); \n\n    const handleChange = useCallback( evt => {\n        const value             = evt.target.value\n        const name              = evt.target.name;\n        const currentMonthDays  = data.year[currentMonthNumber].days;\n        const todayTotal        = getTotalHrsMinutes(data.today, name, value);\n        const dayTotalTime      = getDayTotalTime(data.today, name, value);  \n        const monthTotalTime    = getMonthTotalTime(currentMonthDays, currentDayNumber, dayTotalTime);\n\n        let currentDayIndex = data.year[currentMonthNumber]\n                                 .days.map(day=>day.dayNumber)\n                                 .indexOf(parseInt(currentDayNumber));\n\n        setData(produce((draft) => {\n\n            draft.day[currentMonthName][currentDayNumber][evt.target.name] = value;\n            draft.day[currentMonthName][currentDayNumber].totalHrs =  {\n                hours: todayTotal.hours,\n                minutes: todayTotal.minutes\n            }\n\n            draft.today[evt.target.name] = value;\n            draft.today.totalHrs =  {\n                hours: todayTotal.hours,\n                minutes: todayTotal.minutes\n            }\n\n            draft.year[currentMonthNumber].days[currentDayIndex].totalTime = dayTotalTime;\n            draft.year[currentMonthNumber].totalTime = monthTotalTime;\n        }))\n\n    }, [data, currentMonthNumber]);\n\n  return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n            <Container>\n                <h1 className=\"mt-5 mb-5 title\"><u>Responsive Web Design Certification:</u></h1> \n             <Row>\n                <Col>\n             <Switch>\n               <Route exact path=\"/\">\n                  <Today data={data.today} handleChange={handleChange} />\n               </Route>\n                <Route exact path=\"/today\">\n                  <Today data={data.today} handleChange={handleChange} />\n               </Route>\n               <Route exact path={`/${currentMonthName}`}>\n                  <Month data={data.year[currentMonthNumber] } />\n               </Route>\n                <Route exact path=\"/year\">\n                  <Year data={data.year}  />\n               </Route>\n               <Route path=\"/graph\">\n                 <Graph  data={data.year}/>\n               </Route>\n               <Route path=\"/day/\">\n                  <Day data={data.day} />\n               </Route>\n             </Switch>\n             </Col>\n           </Row>\n          </Container>\n      </Router>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}